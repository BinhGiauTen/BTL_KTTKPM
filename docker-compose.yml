---
version: '3.7'
services:
  ## MySQL Docker Compose Config
  mysql-book:
    container_name: mysql-book
    image: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: bookdb
    ports:
      - "3307:3306"
    restart: always
    
  
    
  ## MySQL Docker Compose Config for UserDB
  mysql-user:
    container_name: mysql-user
    image: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: userdb
    ports:
      - "3308:3306"
    restart: always

  ## MySQL Docker Compose Config for InventoryDB
  mysql-inventory:
    container_name: mysql-inventory
    image: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: inventorydb
    ports:
      - "3309:3306"
    restart: always

  ## MySQL Docker Compose Config for BorrowDB
  mysql-borrow:
    container_name: mysql-borrow
    image: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: borrowdb
    ports:
      - "3310:3306"
    restart: always
    
  ## Redis Service
  redis:
    container_name: redis
    image: redis
    ports:
      - "6379:6379"
    restart: always
    
    
  ## Eureka Server
  discovery-server:
    image: discovery-server:latest
    container_name: discovery-server
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  ## Api Gateway
  api-gateway:
    image: api-gateway:latest
    container_name: api-gateway
    ports:
      - "8222:8222"
    expose:
      - "8222"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - discovery-server

  ## Notification-Service Docker Compose Config
  notification-service:
    container_name: notification-service
    image: notification-service:latest
    ports:
      - 9030:9030
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - discovery-server
      - api-gateway
      
  ## User-Service Docker Compose Config
  user-service:
    container_name: user-service
    image: user-service:latest
    ports:
      - 9040:9040
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-user:3306/userdb
      - SPRING_DATASOURCE_USERNAME:root
      - SPRING_DATASOURCE_PASSWORD:root
    depends_on:
      - discovery-server
      - api-gateway
      - mysql-user
      
  ## User-Service Docker Compose Config
  inventory-service:
    container_name: inventory-service
    image: inventory-service:latest
    ports:
      - 9020:9020
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-inventory:3306/inventorydb
      - SPRING_DATASOURCE_USERNAME:root
      - SPRING_DATASOURCE_PASSWORD:root
    depends_on:
      - discovery-server
      - api-gateway
      - mysql-inventory
      
  ## User-Service Docker Compose Config
  borrow-service:
    container_name: borrow-service
    image: borrow-service:latest
    ports:
      - 9010:9010
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-borrow:3306/borrowdb
      - SPRING_DATASOURCE_USERNAME:root
      - SPRING_DATASOURCE_PASSWORD:root
    depends_on:
      - discovery-server
      - api-gateway
      - mysql-borrow
      - inventory-service


  ## Book-Service Docker Compose Config
  book-service:
    container_name: book-service
    image: book-service:latest
    ports:
      - 9000:9000
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-book:3306/bookdb
      - SPRING_DATASOURCE_USERNAME:root
      - SPRING_DATASOURCE_PASSWORD:root
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
    depends_on:
      - discovery-server
      - api-gateway
      - mysql-book
      - redis
